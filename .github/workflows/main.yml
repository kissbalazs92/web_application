name: Workflow to test the webshop using Docker Compose and matrix

on:
  push:
    branches:
      - master

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Read browsers JSON file
      id: set-matrix
      run: |
        content=`cat ./browsers.json`
        content="${content//'%'/'%25'}"
        content="${content//$'\n'/' '}"
        content="${content//$'\r'/'%0D'}"
        matrix_content="{\"browsers\": $content}"
        echo $matrix_content
        echo "matrix=$matrix_content" | tee $GITHUB_ENV

  run-tests:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: 
        browsers: [Firefox, Chrome]
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set BROWSER_ENV variable
      run: echo "BROWSER_ENV=${{ matrix.browsers }}" >> $GITHUB_ENV

    - name: Run Docker Compose
      run: |
        sed -i "s/- BROWSER=Chrome/- BROWSER=${{ env.BROWSER_ENV }}/g" docker-compose.yml
        docker-compose up -d web db

    - name: Run tests in Docker container
      run: |
        docker-compose run

    - name: Debug container and results directory
      if: always()
      run: |
        docker ps
        container_id=$(docker ps -aqf "name=database_container")
        echo "Container ID: $container_id"
        docker exec $container_id bash -c "ls /results"

    - name: Copy results
      if: always()
      run: |
        docker cp robot_framework_container:/results ./results

    - name: Remove container
      if: always()
      run: |
        docker-compose down

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.browsers }}
        path: ./results

