on:
  push:
    branches:
      - master

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Read browsers JSON file
      id: set-matrix
      run: |
        content=`cat ./browsers.json | jq -c .`
        echo "content: $content"
        echo "matrix=$content" >> $GITHUB_ENV
        echo "SET_MATRIX_OUTPUT=$content" >> $GITHUB_ENV

  run-tests:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - browsers: ${{ env.SET_MATRIX_OUTPUT }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set BROWSER_ENV variable
      run: echo "BROWSER_ENV=${{ matrix.browsers }}" >> $GITHUB_ENV

    - name: Print BROWSER_ENV variable
      run: echo "BROWSER_ENV=${{ env.BROWSER_ENV }}"

    - name: Run Docker Compose and run tests
      run: |
        export BROWSER=${{ env.BROWSER_ENV }}
        docker-compose up -d web db
        docker-compose up robot || true
        exit_code=$(docker inspect robot_framework_container --format='{{.State.ExitCode}}')
        echo "exit_code=$exit_code" >> $GITHUB_ENV
        if [ "$exit_code" -ne "0" ]; then
          exit 1
        fi

    - name: Copy results
      if: always()
      run: |
        container_name=$(docker-compose ps -q robot)
        docker cp $container_name:/results ./results

    - name: Remove container
      if: always()
      run: |
        docker-compose down

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.browsers }}
        path: ./results
