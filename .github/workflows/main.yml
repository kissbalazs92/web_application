on:
  push:
    branches:
      - master

jobs:
  prepare-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Read browsers JSON file
      id: set-matrix
      run: |
        content=`cat ./browsers.json | jq -c .`
        echo "matrix=$content" | tee $GITHUB_ENV

  run-tests:
    needs: prepare-matrix
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: 
        browsers:
          - Chrome
          - Firefox
    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Set BROWSER_ENV variable
      run: echo "BROWSER_ENV=${{ matrix.browsers }}" >> $GITHUB_ENV

    - name: Print BROWSER_ENV variable
      run: echo "BROWSER_ENV=${{ env.BROWSER_ENV }}"

    - name: Run Docker Compose and run tests
      run: |
        sed -i "s/- BROWSER=Chrome/- BROWSER=${{ env.BROWSER_ENV }}/g" docker-compose.yml
        docker-compose up -d web db
        docker-compose run robot /app/robot_framework/tests
        exit_code=$?
        echo "exit_code=$exit_code" >> $GITHUB_ENV
        if [ $exit_code -ne 0 ]; then
          echo "::error::Test(s) failed with exit code $exit_code"
          exit $exit_code
        fi

    - name: Copy results
      if: always()
      run: |
        docker cp robot_framework_container:/results ./results

    - name: Remove container
      if: always()
      run: |
        docker-compose down

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-${{ matrix.browsers }}
        path: ./results
